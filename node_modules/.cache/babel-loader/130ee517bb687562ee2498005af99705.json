{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/ed/seconddapp/pages/index.js\";\nimport React, { Component } from 'react';\nimport { Card, Container, Segment, Table, Form, Button, Icon } from 'semantic-ui-react';\nimport Head from \"next/head\";\nimport FixedMenuLayout from \"../components/footer\";\nimport web3 from \"../components/web3\";\nimport instance from \"../components/verifier\";\n\nvar Index =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Index, _Component);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var x, y, i, _z, z, _i, r;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                event.preventDefault();\n                _context.t0 = _this;\n                _context.next = 5;\n                return web3.eth.getAccounts();\n\n              case 5:\n                _context.t1 = _context.sent;\n                _context.t2 = {\n                  accounts: _context.t1\n                };\n\n                _context.t0.setState.call(_context.t0, _context.t2);\n\n                _this.setState({\n                  loading: true,\n                  errorMessage: ''\n                });\n\n                _context.next = 11;\n                return instance.methods.getBasicInfo(_this.state.address).call();\n\n              case 11:\n                x = _context.sent;\n\n                _this.setState({\n                  info: x\n                });\n\n                _context.next = 15;\n                return instance.methods.getJobCount(_this.state.address).call();\n\n              case 15:\n                y = _context.sent;\n                i = 0;\n\n              case 17:\n                if (!(i < y)) {\n                  _context.next = 25;\n                  break;\n                }\n\n                _context.next = 20;\n                return instance.methods.getJob(_this.state.address, i).call();\n\n              case 20:\n                _z = _context.sent;\n\n                _this.setState({\n                  jobs: [].concat(_toConsumableArray(_this.state.jobs), [_z])\n                });\n\n              case 22:\n                i++;\n                _context.next = 17;\n                break;\n\n              case 25:\n                _context.next = 27;\n                return instance.methods.getCertificateCount(_this.state.address).call();\n\n              case 27:\n                z = _context.sent;\n                _i = 0;\n\n              case 29:\n                if (!(_i < z)) {\n                  _context.next = 37;\n                  break;\n                }\n\n                _context.next = 32;\n                return instance.methods.getCertificate(_this.state.address, _i).call();\n\n              case 32:\n                r = _context.sent;\n\n                _this.setState({\n                  certificates: [].concat(_toConsumableArray(_this.state.certificates), [r])\n                });\n\n              case 34:\n                _i++;\n                _context.next = 29;\n                break;\n\n              case 37:\n                _context.next = 42;\n                break;\n\n              case 39:\n                _context.prev = 39;\n                _context.t3 = _context[\"catch\"](0);\n                if (_context.t3.message.includes('invalid address')) _this.setState({\n                  errorMessage: 'invalid address'\n                });\n\n              case 42:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 39]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _this.state = {\n      loading: false,\n      accounts: [],\n      jobs: [],\n      certificates: [],\n      info: null\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadBlockchainData();\n    }\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.t0 = this;\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                _context2.t1 = _context2.sent;\n                _context2.t2 = {\n                  accounts: _context2.t1\n                };\n\n                _context2.t0.setState.call(_context2.t0, _context2.t2);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"renderCertificates\",\n    value: function renderCertificates() {\n      var x = this.state.accounts[0];\n      var y = 'Unknown';\n      var r = this.state.certificates.map(function (certificate) {\n        if (certificate[3] === false && certificate[4] === false) {\n          y = 'Unknown';\n        } else if (job[3] === true) {\n          y = 'Approved';\n        } else if (job[4] === true) {\n          y = 'Denied';\n        }\n\n        return [React.createElement(Table.Row, {\n          positive: certificate[3],\n          negative: !certificate[3],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          key: x,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, certificate[1].toString()), React.createElement(Table.Cell, {\n          key: x,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, certificate[0].toString()), React.createElement(Table.Cell, {\n          key: x,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, certificate[2].toString()), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, y))];\n      });\n      return r;\n    }\n  }, {\n    key: \"renderCertificateTable\",\n    value: function renderCertificateTable() {\n      var tableStyle = {\n        width: '38%',\n        margin: '30px auto'\n      };\n\n      if (this.state.certificates && this.state.certificates.length) {\n        return React.createElement(Table, {\n          celled: true,\n          style: tableStyle,\n          color: 'blue',\n          key: 'blue',\n          inverted: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(Table.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(Segment, {\n          inverted: true,\n          color: \"blue\",\n          style: {\n            textalign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \" \", React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \"Certificates\"), \" \"), React.createElement(Table.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(Table.HeaderCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, \" Institution\"), React.createElement(Table.HeaderCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, \"Year \"), React.createElement(Table.HeaderCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, \"Degree\"), React.createElement(Table.HeaderCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, \"Validity\"))), React.createElement(Table.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, this.renderCertificates()));\n      } else return null;\n    }\n  }, {\n    key: \"renderJobs\",\n    value: function renderJobs() {\n      var x = this.state.accounts[0];\n      var y = 'Unknown';\n      var r = this.state.jobs.map(function (job) {\n        if (job[3] === false && job[4] === false) {\n          y = 'Unknown';\n        } else if (job[3] === true) {\n          y = 'Approved';\n        } else if (job[4] === true) {\n          y = 'Denied';\n        }\n\n        return [React.createElement(Table.Row, {\n          positive: job[3],\n          negative: !job[3],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          key: x,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, job[1].toString()), React.createElement(Table.Cell, {\n          key: x,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, job[0].toString()), React.createElement(Table.Cell, {\n          key: x,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, job[2].toString()), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, y))];\n      });\n      return r;\n    }\n  }, {\n    key: \"renderJobsTable\",\n    value: function renderJobsTable() {\n      var tableStyle = {\n        width: '38%',\n        margin: '30px auto'\n      };\n\n      if (this.state.jobs && this.state.jobs.length) {\n        return React.createElement(Table, {\n          celled: true,\n          style: tableStyle,\n          color: 'blue',\n          key: 'blue',\n          inverted: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, React.createElement(Table.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, React.createElement(Segment, {\n          inverted: true,\n          color: \"blue\",\n          style: {\n            textalign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, \" \", React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, \"Jobs\"), \" \"), React.createElement(Table.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, React.createElement(Table.HeaderCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, \" Company\"), React.createElement(Table.HeaderCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, \"Months Worked\"), React.createElement(Table.HeaderCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, \"Position\"), React.createElement(Table.HeaderCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, \"Validity\"))), React.createElement(Table.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, this.renderJobs()));\n      } else return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var cardStyle = {\n        display: 'block',\n        width: '28%',\n        margin: '7px auto',\n        height: 'auto'\n      };\n      var formStyle = {\n        width: '100%'\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(Head, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.11/semantic.min.css\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), React.createElement(\"style\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"\\n        body {\\n         background: url(\\\"https://images.unsplash.com/photo-1511649475669-e288648b2339?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2089&q=80\\\");\\n         background-repeat: no-repeat;\\n         background-position: center; \\n         background-attachment: fixed;\\n        }\\n      \")), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"ed\"), React.createElement(\"h1\", {\n        style: {\n          margin: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"Search by Address\"), React.createElement(Form, {\n        className: \"form-inline\",\n        style: formStyle,\n        onSubmit: this.onSubmit,\n        error: !!this.state.errorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        inline: true,\n        style: {\n          width: '60%',\n          margin: '150px auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        style: {\n          fontSize: 'xx-large'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Search:\"), React.createElement(Form.Field, {\n        style: {\n          width: '90%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        placeholder: \"Ethereum address of user...\",\n        \"aria-placeholder\": {\n          color: 'blue'\n        },\n        style: {\n          width: '100%',\n          height: '75px',\n          fontSize: 'large'\n        },\n        value: this.state.address,\n        onChange: this.handleChange,\n        error: !!this.state.errorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.onSubmit,\n        color: \"blue\",\n        style: {\n          width: '150px',\n          height: '75px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        color: \"white\",\n        name: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      })))), React.createElement(Message, {\n        style: {\n          width: '15%',\n          margin: '30px auto'\n        },\n        error: true,\n        header: \"Error!\",\n        content: this.state.errorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      })), this.state.info === null ? null : React.createElement(Card, {\n        color: \"blue\",\n        style: cardStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          margin: '2%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          margin: '1%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Name:\"), \" \", React.createElement(\"h5\", {\n        style: {\n          margin: '1%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \" \", this.state.info[0].toString())), React.createElement(\"div\", {\n        style: {\n          margin: '2%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          margin: '1%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"Date of birth:\"), \" \", React.createElement(\"h5\", {\n        style: {\n          margin: '1%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, _parseInt(this.state.info[1]), \"/\", _parseInt(this.state.info[2]), \"/\", _parseInt(this.state.info[3]), \" \")), React.createElement(\"div\", {\n        style: {\n          margin: '2%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          margin: '1%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Location:\"), \" \", React.createElement(\"h5\", {\n        style: {\n          margin: '1%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \" \", this.state.info[4].toString())), React.createElement(\"div\", {\n        style: {\n          margin: '2%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          margin: '1%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, \"E-mail:\"), \" \", React.createElement(\"h5\", {\n        style: {\n          margin: '1%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, \" \", this.state.info[5].toString())))), this.renderJobsTable(), this.renderCertificateTable(), React.createElement(FixedMenuLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nexport default Index;","map":{"version":3,"sources":["/home/ed/seconddapp/pages/index.js"],"names":["React","Component","Card","Container","Segment","Table","Form","Button","Icon","Head","FixedMenuLayout","web3","instance","Index","props","event","preventDefault","eth","getAccounts","accounts","setState","loading","errorMessage","methods","getBasicInfo","state","address","call","x","info","getJobCount","y","i","getJob","z","jobs","getCertificateCount","getCertificate","r","certificates","message","includes","loadBlockchainData","map","certificate","job","toString","tableStyle","width","margin","length","textalign","renderCertificates","renderJobs","cardStyle","display","height","formStyle","onSubmit","fontSize","color","handleChange","renderJobsTable","renderCertificateTable"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Card, Container, Segment, Table, Form, Button, Icon} from 'semantic-ui-react'\n\nimport Head from \"next/head\";\nimport FixedMenuLayout from \"../components/footer\";\nimport web3 from \"../components/web3\";\nimport instance from \"../components/verifier\";\n\n\nclass Index extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            accounts: [],\n            jobs: [],\n            certificates: [],\n            info: null\n        };\n    }\n\n    componentWillMount() {\n        this.loadBlockchainData()\n    }\n\n    async loadBlockchainData() {\n        this.setState({accounts: await web3.eth.getAccounts()});\n    }\n\n    onSubmit = async event => {\n\n            try {\n                event.preventDefault();\n                this.setState({accounts: await web3.eth.getAccounts()});\n                this.setState({loading: true, errorMessage: ''});\n                const x = await instance.methods.getBasicInfo(this.state.address).call();\n                this.setState({\n                    info: x\n                });\n                const y = await instance.methods.getJobCount(this.state.address).call();\n                for (let i = 0; i < y; i++) {\n                    const z = await instance.methods.getJob(this.state.address, i).call();\n                    this.setState({jobs: [...this.state.jobs, z]});\n                }\n\n                const z = await instance.methods.getCertificateCount(this.state.address).call();\n                for (let i = 0; i < z; i++) {\n                    const r = await instance.methods.getCertificate(this.state.address, i).call();\n                    this.setState({certificates: [...this.state.certificates, r]});\n                }\n            } catch (err) {\n                if (err.message.includes('invalid address'))\n                    this.setState({errorMessage: 'invalid address'});\n            }\n\n\n        };\n\n    renderCertificates() {\n\n\n        const x = this.state.accounts[0];\n        let y = 'Unknown';\n        let r = this.state.certificates.map(function (certificate) {\n            if(certificate[3] === false && certificate[4] === false) {\n                y = 'Unknown'\n            }\n            else if(job[3] === true) {\n                y = 'Approved'\n            }\n            else if(job[4] === true){\n                y='Denied'\n            }\n            return [<Table.Row positive={certificate[3]} negative ={!certificate[3]}>\n                <Table.Cell key={x}>{certificate[1].toString()}</Table.Cell>\n                <Table.Cell key={x}>{certificate[0].toString()}</Table.Cell>\n                <Table.Cell key={x}>{certificate[2].toString()}</Table.Cell>\n                <Table.Cell>{y}</Table.Cell>\n            </Table.Row>];\n        });\n        return r;\n    }\n    renderCertificateTable()\n    {\n\n        let tableStyle = {\n            width: '38%',\n            margin: '30px auto'\n        };\n\n\n        if (this.state.certificates && this.state.certificates.length) {\n            return (<Table celled style={tableStyle} color={'blue'} key={'blue'}  inverted  >\n\n                    <Table.Header>\n                        <Segment inverted color=\"blue\" style={{textalign: 'center'}}> <h2>Certificates</h2> </Segment>\n                        <Table.Row>\n                            <Table.HeaderCell> Institution</Table.HeaderCell>\n                            <Table.HeaderCell>Year </Table.HeaderCell>\n                            <Table.HeaderCell>Degree</Table.HeaderCell>\n                            <Table.HeaderCell>Validity</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {this.renderCertificates()}\n                    </Table.Body>\n                </Table>\n            );\n        } else return null;\n    }\n\n\n    renderJobs() {\n\n\n        const x = this.state.accounts[0];\n        let y = 'Unknown';\n        let r = this.state.jobs.map(function (job) {\n            if(job[3] === false && job[4] === false) {\n                y = 'Unknown'\n            }\n            else if(job[3] === true) {\n                y = 'Approved'\n            }\n            else if(job[4] === true){\n                y='Denied'\n            }\n            return [<Table.Row positive={job[3]} negative ={!job[3]}>\n                <Table.Cell key={x}>{job[1].toString()}</Table.Cell>\n                <Table.Cell key={x}>{job[0].toString()}</Table.Cell>\n                <Table.Cell key={x}>{job[2].toString()}</Table.Cell>\n                <Table.Cell>{y}</Table.Cell>\n            </Table.Row>];\n        });\n        return r;\n    }\n    renderJobsTable()\n    {\n\n        let tableStyle = {\n            width: '38%',\n            margin: '30px auto'\n        };\n\n\n        if (this.state.jobs && this.state.jobs.length) {\n            return (<Table celled style={tableStyle} color={'blue'} key={'blue'}  inverted  >\n\n                    <Table.Header>\n                        <Segment inverted color=\"blue\" style={{textalign: 'center'}}> <h2>Jobs</h2> </Segment>\n                        <Table.Row>\n                            <Table.HeaderCell> Company</Table.HeaderCell>\n                            <Table.HeaderCell>Months Worked</Table.HeaderCell>\n                            <Table.HeaderCell>Position</Table.HeaderCell>\n                            <Table.HeaderCell>Validity</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {this.renderJobs()}\n                    </Table.Body>\n                </Table>\n            );\n        } else return null;\n    }\n\n\n    render() {\n\n        let cardStyle = {\n            display: 'block',\n            width: '28%',\n            margin: '7px auto',\n            height: 'auto',\n        };\n\n        let formStyle = {\n            width: '100%',\n        };\n        return (\n\n            <div>\n                <div>\n\n                </div>\n                <Head>\n                    <link\n                        rel=\"stylesheet\"\n                        href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.11/semantic.min.css\"\n                    />\n                    <style>{`\n        body {\n         background: url(\"https://images.unsplash.com/photo-1511649475669-e288648b2339?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2089&q=80\");\n         background-repeat: no-repeat;\n         background-position: center; \n         background-attachment: fixed;\n        }\n      `}</style>\n                </Head>\n                <Container>ed</Container>\n\n                <h1 style={{margin: '20px'}}>Search by Address</h1>\n                <Form className={\"form-inline\"} style={formStyle} onSubmit={this.onSubmit}\n                      error={!!this.state.errorMessage}>\n\n                    <Form.Group inline style={{width: '60%', margin: '150px auto'}}>\n                        <label style={{fontSize: 'xx-large'}}>Search:</label>\n                        <Form.Field style={{width: '90%'}}>\n                            <Form.Input placeholder=\"Ethereum address of user...\"\n                                        aria-placeholder={{color: 'blue'}}\n                                        style={{width: '100%', height: '75px', fontSize: 'large',}}\n                                        value={this.state.address}\n                                        onChange={this.handleChange}\n                                        error={!!this.state.errorMessage}\n                            />\n                        </Form.Field>\n                        <Form.Field>\n                            <Button onClick={this.onSubmit}\n                                    color={\"blue\"}\n                                    style={{width: '150px', height: '75px'}}>\n                                <Icon color='white' name='search'/>\n                            </Button>\n                        </Form.Field>\n                    </Form.Group>\n                    <Message style={{width: '15%', margin: '30px auto'}} error header={\"Error!\"} content={this.state.errorMessage}/>\n                </Form>\n                {this.state.info === null ? null :\n                    <Card color=\"blue\" style={ cardStyle } >\n                        <Card.Content>\n\n                            <div style={{margin:'2%'}}><h3 style={{margin:'1%'}}>Name:</h3> <h5 style={{margin:'1%'}}> {this.state.info[0].toString()}</h5></div>\n                            <div style={{margin:'2%'}}><h3 style={{margin:'1%'}}>Date of birth:</h3> <h5 style={{margin:'1%'}}>{parseInt(this.state.info[1])}/{parseInt(this.state.info[2])}/{parseInt(this.state.info[3])} </h5></div>\n                            <div style={{margin:'2%'}}><h3 style={{margin:'1%'}}>Location:</h3> <h5 style={{margin:'1%'}}> {this.state.info[4].toString()}</h5></div>\n                            <div style={{margin:'2%'}}><h3 style={{margin:'1%'}}>E-mail:</h3> <h5 style={{margin:'1%'}}> {this.state.info[5].toString()}</h5></div>\n                        </Card.Content>\n\n                    </Card>}\n                {this.renderJobsTable()}\n                {this.renderCertificateTable()}\n\n                <FixedMenuLayout/>\n\n            </div>\n\n        );\n    }\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}