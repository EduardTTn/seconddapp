{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/ed/seconddapp/pages/showinfo.js\";\nimport React, { Component } from 'react';\nimport Head from \"next/head\";\nimport { Button, Card, Container, Form, Message, Segment, Table, Icon } from \"semantic-ui-react\";\nimport FixedMenuLayout from \"../components/footer\";\nimport instance from \"../components/verifier.js\";\nimport web3 from '../components/web3.js';\n\nvar ShowInfo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ShowInfo, _Component);\n\n  function ShowInfo(props) {\n    var _this;\n\n    _classCallCheck(this, ShowInfo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ShowInfo).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"ww\", void 0);\n\n    _this.state = {\n      loading: false,\n      accounts: [],\n      jobs: [],\n      certificates: [],\n      info: null\n    };\n    return _this;\n  }\n\n  _createClass(ShowInfo, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadBlockchainData();\n    }\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var x, y, i, _z, z, _i, r;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = this;\n                _context.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                _context.t1 = _context.sent;\n                _context.t2 = {\n                  accounts: _context.t1\n                };\n\n                _context.t0.setState.call(_context.t0, _context.t2);\n\n                _context.next = 8;\n                return instance.methods.getBasicInfo(this.state.accounts[0]).call();\n\n              case 8:\n                x = _context.sent;\n                this.setState({\n                  info: x\n                });\n                _context.next = 12;\n                return instance.methods.getJobCount(this.state.accounts[0]).call();\n\n              case 12:\n                y = _context.sent;\n                i = 0;\n\n              case 14:\n                if (!(i < y)) {\n                  _context.next = 22;\n                  break;\n                }\n\n                _context.next = 17;\n                return instance.methods.getJob(this.state.accounts[0], i).call();\n\n              case 17:\n                _z = _context.sent;\n                this.setState({\n                  jobs: [].concat(_toConsumableArray(this.state.jobs), [_z])\n                });\n\n              case 19:\n                i++;\n                _context.next = 14;\n                break;\n\n              case 22:\n                _context.next = 24;\n                return instance.methods.getCertificateCount(this.state.accounts[0]).call();\n\n              case 24:\n                z = _context.sent;\n                _i = 0;\n\n              case 26:\n                if (!(_i < z)) {\n                  _context.next = 34;\n                  break;\n                }\n\n                _context.next = 29;\n                return instance.methods.getCertificate(this.state.accounts[0], _i).call();\n\n              case 29:\n                r = _context.sent;\n                this.setState({\n                  certificates: [].concat(_toConsumableArray(this.state.certificates), [r])\n                });\n\n              case 31:\n                _i++;\n                _context.next = 26;\n                break;\n\n              case 34:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"renderCertificates\",\n    value: function renderCertificates() {\n      var x = this.state.accounts[0];\n      var y = 'Unknown';\n      var r = this.state.certificates.map(function (certificate) {\n        if (certificate[3] === false && certificate[4] === false) {\n          y = 'Unknown';\n        } else if (job[3] === true) {\n          y = 'Approved';\n        } else if (job[4] === true) {\n          y = 'Denied';\n        }\n\n        return [React.createElement(Table.Row, {\n          positive: certificate[3],\n          negative: !certificate[3],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          key: x,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, certificate[1].toString()), React.createElement(Table.Cell, {\n          key: x,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, certificate[0].toString()), React.createElement(Table.Cell, {\n          key: x,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, certificate[2].toString()), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, y))];\n      });\n      return r;\n    }\n  }, {\n    key: \"renderCertificateTable\",\n    value: function renderCertificateTable() {\n      var tableStyle = {\n        width: '38%',\n        margin: '30px auto'\n      };\n\n      if (this.state.certificates && this.state.certificates.length) {\n        return React.createElement(Table, {\n          celled: true,\n          style: tableStyle,\n          color: 'blue',\n          key: 'blue',\n          inverted: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(Table.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(Segment, {\n          inverted: true,\n          color: \"blue\",\n          style: {\n            textalign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \" \", React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"Certificates\"), \" \"), React.createElement(Table.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(Table.HeaderCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, \" Company\"), React.createElement(Table.HeaderCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"Months Worked\"), React.createElement(Table.HeaderCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, \"Position\"), React.createElement(Table.HeaderCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \"Validity\"))), React.createElement(Table.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, this.renderCertificates()));\n      } else return null;\n    }\n  }, {\n    key: \"renderJobs\",\n    value: function renderJobs() {\n      var x = this.state.accounts[0];\n      var y = 'Unknown';\n      var r = this.state.jobs.map(function (job) {\n        if (job[3] === false && job[4] === false) {\n          y = 'Unknown';\n        } else if (job[3] === true) {\n          y = 'Approved';\n        } else if (job[4] === true) {\n          y = 'Denied';\n        }\n\n        return [React.createElement(Table.Row, {\n          positive: job[3],\n          negative: !job[3],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          key: x,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, job[1].toString()), React.createElement(Table.Cell, {\n          key: x,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, job[0].toString()), React.createElement(Table.Cell, {\n          key: x,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, job[2].toString()), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, y))];\n      });\n      return r;\n    }\n  }, {\n    key: \"renderJobsTable\",\n    value: function renderJobsTable() {\n      var tableStyle = {\n        width: '38%',\n        margin: '30px auto'\n      };\n\n      if (this.state.jobs && this.state.jobs.length) {\n        return React.createElement(Table, {\n          celled: true,\n          style: tableStyle,\n          color: 'blue',\n          key: 'blue',\n          inverted: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(Table.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, React.createElement(Segment, {\n          inverted: true,\n          color: \"blue\",\n          style: {\n            textalign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, \" \", React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, \"Jobs\"), \" \"), React.createElement(Table.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, React.createElement(Table.HeaderCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, \" Company\"), React.createElement(Table.HeaderCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, \"Months Worked\"), React.createElement(Table.HeaderCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, \"Position\"), React.createElement(Table.HeaderCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, \"Validity\"))), React.createElement(Table.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, this.renderJobs()));\n      } else return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.info);\n      var cardStyle = {\n        width: '15%',\n        margin: '100px auto'\n      };\n      var labelStyle = {\n        margin: '10px',\n        textAlign: 'center'\n      };\n      var formstyle = {\n        opacity: '100%'\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }), React.createElement(Head, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.11/semantic.min.css\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(\"style\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"\\n        h1,\\n        a {\\n          font-family: 'Helvetica';\\n        }\\n        \\n        Card {\\n           box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\\n           background-color: #D9499A;\\n           }\\n           \\n        body {\\n         background: url(\\\"https://images.unsplash.com/photo-1511649475669-e288648b2339?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2089&q=80\\\");\\n         background-repeat: no-repeat;\\n         background-position: center; \\n         background-attachment: fixed;\\n        }\\n      \")), this.state.info === null ? null : React.createElement(Card, {\n        color: \"blue\",\n        style: cardStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          margin: '2%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          margin: '1%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Name:\"), \" \", React.createElement(\"h5\", {\n        style: {\n          margin: '1%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \" \", this.state.info[0].toString())), React.createElement(\"div\", {\n        style: {\n          margin: '2%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          margin: '1%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Date of birth:\"), \" \", React.createElement(\"h5\", {\n        style: {\n          margin: '1%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, _parseInt(this.state.info[1]), \"/\", _parseInt(this.state.info[2]), \"/\", _parseInt(this.state.info[3]), \" \")), React.createElement(\"div\", {\n        style: {\n          margin: '2%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          margin: '1%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Location:\"), \" \", React.createElement(\"h5\", {\n        style: {\n          margin: '1%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \" \", this.state.info[4].toString())), React.createElement(\"div\", {\n        style: {\n          margin: '2%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          margin: '1%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"E-mail:\"), \" \", React.createElement(\"h5\", {\n        style: {\n          margin: '1%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \" \", this.state.info[5].toString())))), this.renderJobsTable(), this.renderCertificateTable(), React.createElement(FixedMenuLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ShowInfo;\n}(Component);\n\nexport default ShowInfo;","map":{"version":3,"sources":["/home/ed/seconddapp/pages/showinfo.js"],"names":["React","Component","Head","Button","Card","Container","Form","Message","Segment","Table","Icon","FixedMenuLayout","instance","web3","ShowInfo","props","state","loading","accounts","jobs","certificates","info","loadBlockchainData","eth","getAccounts","setState","methods","getBasicInfo","call","x","getJobCount","y","i","getJob","z","getCertificateCount","getCertificate","r","map","certificate","job","toString","tableStyle","width","margin","length","textalign","renderCertificates","renderJobs","console","log","cardStyle","labelStyle","textAlign","formstyle","opacity","renderJobsTable","renderCertificateTable"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Head from \"next/head\";\nimport {Button, Card, Container, Form, Message, Segment,Table, Icon} from \"semantic-ui-react\";\nimport FixedMenuLayout from \"../components/footer\";\nimport instance from \"../components/verifier.js\";\nimport web3 from '../components/web3.js';\n\n\n\nclass ShowInfo extends Component {\n\n\n   constructor(props){\n       super(props);\n       this.state={\n           loading: false,\n           accounts: [],\n           jobs:[],\n           certificates:[],\n         info:null\n   };\n}\n    componentWillMount(){\n        this.loadBlockchainData()\n    }\n\n    async loadBlockchainData() {\n        this.setState({accounts: await web3.eth.getAccounts()});\n        const x = await instance.methods.getBasicInfo(this.state.accounts[0]).call();\n        this.setState({\n            info: x\n        });\n        const y = await instance.methods.getJobCount(this.state.accounts[0]).call();\n        for (let i = 0; i < y; i++) {\n            const z = await instance.methods.getJob(this.state.accounts[0], i).call();\n            this.setState({jobs: [...this.state.jobs, z]});\n        }\n\n        const z = await instance.methods.getCertificateCount(this.state.accounts[0]).call();\n        for (let i = 0; i < z; i++) {\n            const r = await instance.methods.getCertificate(this.state.accounts[0], i).call();\n            this.setState({certificates: [...this.state.certificates, r]});\n        }\n\n    }\n\n\n\n\n   renderCertificates() {\n\n\n       const x = this.state.accounts[0];\n       let y = 'Unknown';\n       let r = this.state.certificates.map(function (certificate) {\n           if(certificate[3] === false && certificate[4] === false) {\n               y = 'Unknown'\n           }\n           else if(job[3] === true) {\n                y = 'Approved'\n           }\n           else if(job[4] === true){\n               y='Denied'\n           }\n           return [<Table.Row positive={certificate[3]} negative ={!certificate[3]}>\n               <Table.Cell key={x}>{certificate[1].toString()}</Table.Cell>\n               <Table.Cell key={x}>{certificate[0].toString()}</Table.Cell>\n               <Table.Cell key={x}>{certificate[2].toString()}</Table.Cell>\n               <Table.Cell>{y}</Table.Cell>\n           </Table.Row>];\n       });\n       return r;\n   }\nrenderCertificateTable()\n       {\n\n           let tableStyle = {\n               width: '38%',\n               margin: '30px auto'\n           };\n\n\n           if (this.state.certificates && this.state.certificates.length) {\n               return (<Table celled style={tableStyle} color={'blue'} key={'blue'}  inverted  >\n\n                       <Table.Header>\n                           <Segment inverted color=\"blue\" style={{textalign: 'center'}}> <h2>Certificates</h2> </Segment>\n                           <Table.Row>\n                               <Table.HeaderCell> Company</Table.HeaderCell>\n                               <Table.HeaderCell>Months Worked</Table.HeaderCell>\n                               <Table.HeaderCell>Position</Table.HeaderCell>\n                               <Table.HeaderCell>Validity</Table.HeaderCell>\n                           </Table.Row>\n                       </Table.Header>\n                       <Table.Body>\n                           {this.renderCertificates()}\n                       </Table.Body>\n                   </Table>\n               );\n           } else return null;\n       }\n\n\n    renderJobs() {\n\n\n        const x = this.state.accounts[0];\n        let y = 'Unknown';\n        let r = this.state.jobs.map(function (job) {\n            if(job[3] === false && job[4] === false) {\n                y = 'Unknown'\n            }\n            else if(job[3] === true) {\n                y = 'Approved'\n            }\n            else if(job[4] === true){\n                y='Denied'\n            }\n            return [<Table.Row positive={job[3]} negative ={!job[3]}>\n                <Table.Cell key={x}>{job[1].toString()}</Table.Cell>\n                <Table.Cell key={x}>{job[0].toString()}</Table.Cell>\n                <Table.Cell key={x}>{job[2].toString()}</Table.Cell>\n                <Table.Cell>{y}</Table.Cell>\n            </Table.Row>];\n        });\n        return r;\n    }\n    renderJobsTable()\n    {\n\n        let tableStyle = {\n            width: '38%',\n            margin: '30px auto'\n        };\n\n\n        if (this.state.jobs && this.state.jobs.length) {\n            return (<Table celled style={tableStyle} color={'blue'} key={'blue'}  inverted  >\n\n                    <Table.Header>\n                        <Segment inverted color=\"blue\" style={{textalign: 'center'}}> <h2>Jobs</h2> </Segment>\n                        <Table.Row>\n                            <Table.HeaderCell> Company</Table.HeaderCell>\n                            <Table.HeaderCell>Months Worked</Table.HeaderCell>\n                            <Table.HeaderCell>Position</Table.HeaderCell>\n                            <Table.HeaderCell>Validity</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {this.renderJobs()}\n                    </Table.Body>\n                </Table>\n            );\n        } else return null;\n    }\n\n    render() {\nconsole.log(this.state.info);\n        let cardStyle = {\n            width: '15%',\n            margin: '100px auto',\n\n\n        };\n\n        let labelStyle = {\n            margin: '10px',\n            textAlign: 'center'\n        };\n\n        let formstyle = {\n            opacity: '100%'\n\n        };\n\n        return(\n            <div>\n                <div>\n\n                </div>\n                <Head>\n                    <link\n                        rel=\"stylesheet\"\n                        href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.11/semantic.min.css\"\n                    />\n                    <style>{`\n        h1,\n        a {\n          font-family: 'Helvetica';\n        }\n        \n        Card {\n           box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\n           background-color: #D9499A;\n           }\n           \n        body {\n         background: url(\"https://images.unsplash.com/photo-1511649475669-e288648b2339?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2089&q=80\");\n         background-repeat: no-repeat;\n         background-position: center; \n         background-attachment: fixed;\n        }\n      `}</style>\n\n\n                </Head>\n\n\n                {this.state.info === null ? null :\n                    <Card color=\"blue\" style={ cardStyle } >\n                        <Card.Content>\n\n                            <div style={{margin:'2%'}}><h3 style={{margin:'1%'}}>Name:</h3> <h5 style={{margin:'1%'}}> {this.state.info[0].toString()}</h5></div>\n                            <div style={{margin:'2%'}}><h3 style={{margin:'1%'}}>Date of birth:</h3> <h5 style={{margin:'1%'}}>{parseInt(this.state.info[1])}/{parseInt(this.state.info[2])}/{parseInt(this.state.info[3])} </h5></div>\n                            <div style={{margin:'2%'}}><h3 style={{margin:'1%'}}>Location:</h3> <h5 style={{margin:'1%'}}> {this.state.info[4].toString()}</h5></div>\n                            <div style={{margin:'2%'}}><h3 style={{margin:'1%'}}>E-mail:</h3> <h5 style={{margin:'1%'}}> {this.state.info[5].toString()}</h5></div>\n                        </Card.Content>\n\n                    </Card>}\n                {this.renderJobsTable()}\n                {this.renderCertificateTable()}\n                <FixedMenuLayout/>\n            </div>\n        );\n    }ww\n}\n\nexport default ShowInfo"]},"metadata":{},"sourceType":"module"}