{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ed/seconddapp/pages/showinfo.js\";\nimport React, { Component } from 'react';\nimport Head from \"next/head\";\nimport { Button, Card, Container, Form, Message, Segment, Table, Icon } from \"semantic-ui-react\";\nimport FixedMenuLayout from \"../components/footer\";\nimport instance from \"../components/verifier.js\";\nimport web3 from '../components/web3.js';\n\nvar ShowInfo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ShowInfo, _Component);\n\n  function ShowInfo(props) {\n    var _this;\n\n    _classCallCheck(this, ShowInfo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ShowInfo).call(this, props));\n    _this.state = {\n      loading: false,\n      accounts: [],\n      jobs: [],\n      certificates: [],\n      info: null\n    };\n    return _this;\n  }\n\n  _createClass(ShowInfo, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadBlockchainData();\n    }\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var x, y, i, _z, _i, _z2, r, z, _i2, _r;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = this;\n                _context.next = 3;\n                return web3.eth.isMining();\n\n              case 3:\n                _context.t1 = _context.sent;\n                _context.t2 = {\n                  loading: _context.t1\n                };\n\n                _context.t0.setState.call(_context.t0, _context.t2);\n\n                _context.t3 = this;\n                _context.next = 9;\n                return web3.eth.getAccounts();\n\n              case 9:\n                _context.t4 = _context.sent;\n                _context.t5 = {\n                  accounts: _context.t4\n                };\n\n                _context.t3.setState.call(_context.t3, _context.t5);\n\n                _context.next = 14;\n                return instance.methods.getBasicInfo(this.state.accounts[0]).call();\n\n              case 14:\n                x = _context.sent;\n                this.setState({\n                  info: x\n                });\n                _context.next = 18;\n                return instance.methods.getJobCount(this.state.accounts[0]).call();\n\n              case 18:\n                y = _context.sent;\n                console.log('y', y);\n                i = 0;\n\n              case 21:\n                if (!(i < y)) {\n                  _context.next = 42;\n                  break;\n                }\n\n                _context.next = 24;\n                return instance.methods.getJob(this.state.accounts[0], i).call();\n\n              case 24:\n                _z = _context.sent;\n                this.setState({\n                  jobs: [].concat(_toConsumableArray(this.state.jobs), [_z])\n                });\n                _i = 0;\n\n              case 27:\n                if (!(_i < y)) {\n                  _context.next = 39;\n                  break;\n                }\n\n                _context.next = 30;\n                return instance.methods.getJob(this.state.accounts[0], _i).call();\n\n              case 30:\n                _z2 = _context.sent;\n                _context.next = 33;\n                return instance.methods.getJob(this.state.accounts[0], _i).call();\n\n              case 33:\n                r = _context.sent;\n                this.setState({\n                  jobs: [].concat(_toConsumableArray(this.state.jobs), [_z2])\n                });\n                this.setState({\n                  jobs: [].concat(_toConsumableArray(this.state.jobs), [r])\n                });\n\n              case 36:\n                _i++;\n                _context.next = 27;\n                break;\n\n              case 39:\n                i++;\n                _context.next = 21;\n                break;\n\n              case 42:\n                _context.next = 44;\n                return instance.methods.getCertificateCount(this.state.accounts[0]).call();\n\n              case 44:\n                z = _context.sent;\n                _i2 = 0;\n\n              case 46:\n                if (!(_i2 < z)) {\n                  _context.next = 54;\n                  break;\n                }\n\n                _context.next = 49;\n                return instance.methods.getCertificate(this.state.accounts[0], _i2).call();\n\n              case 49:\n                _r = _context.sent;\n                this.setState({\n                  certificates: [].concat(_toConsumableArray(this.state.certificates), [_r])\n                });\n\n              case 51:\n                _i2++;\n                _context.next = 46;\n                break;\n\n              case 54:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"renderCertificates\",\n    value: function renderCertificates() {\n      var x = this.state.accounts[0];\n      var y = 'Unknown';\n      var r = this.state.certificates.map(function (certificate) {\n        if (certificate[3] === false && certificate[4] === false) {\n          y = 'Unknown';\n        } else if (certificate[3] === true) {\n          y = 'Approved';\n        } else if (certificate[4] === true) {\n          y = 'Denied';\n        }\n\n        return [React.createElement(Table.Row, {\n          positive: certificate[3],\n          negative: !certificate[3],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          key: x,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, certificate[1].toString()), React.createElement(Table.Cell, {\n          key: x,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, certificate[0].toString()), React.createElement(Table.Cell, {\n          key: x,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, certificate[2].toString()), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, y))];\n      });\n      return r;\n    }\n  }, {\n    key: \"renderCertificateTable\",\n    value: function renderCertificateTable() {\n      var tableStyle = {\n        width: '38%',\n        margin: '30px auto'\n      };\n\n      if (this.state.certificates && this.state.certificates.length) {\n        return React.createElement(Table, {\n          celled: true,\n          style: tableStyle,\n          color: 'blue',\n          key: 'blue',\n          inverted: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(Table.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(Segment, {\n          inverted: true,\n          color: \"blue\",\n          style: {\n            textalign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, \"Certificates\")), React.createElement(Table.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(Table.HeaderCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \" Institution\"), React.createElement(Table.HeaderCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \"Year \"), React.createElement(Table.HeaderCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, \"Degree\"), React.createElement(Table.HeaderCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \"Validity\"))), React.createElement(Table.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, this.renderCertificates()));\n      } else return null;\n    }\n  }, {\n    key: \"renderJobs\",\n    value: function renderJobs() {\n      var x = this.state.accounts[0];\n      var y = 'Unknown';\n      var r = this.state.jobs.map(function (job) {\n        if (job[3] === false && job[4] === false) {\n          y = 'Unknown';\n        } else if (job[3] === true) {\n          y = 'Approved';\n        } else if (job[4] === true) {\n          y = 'Denied';\n        }\n\n        return [React.createElement(Table.Row, {\n          positive: job[3],\n          negative: !job[3],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          key: x,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, job[1].toString()), React.createElement(Table.Cell, {\n          key: x,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, job[0].toString()), React.createElement(Table.Cell, {\n          key: x,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, job[2].toString()), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, y))];\n      });\n      return r;\n    }\n  }, {\n    key: \"renderJobsTable\",\n    value: function renderJobsTable() {\n      var tableStyle = {\n        width: '38%',\n        margin: '30px auto'\n      };\n\n      if (this.state.jobs && this.state.jobs.length) {\n        return React.createElement(Table, {\n          celled: true,\n          style: tableStyle,\n          color: 'blue',\n          key: 'blue',\n          inverted: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, React.createElement(Table.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, React.createElement(Segment, {\n          inverted: true,\n          color: \"blue\",\n          style: {\n            textalign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, \"Jobs\")), React.createElement(Table.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(Table.HeaderCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, \" Company\"), React.createElement(Table.HeaderCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, \"Months Worked\"), React.createElement(Table.HeaderCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, \"Position\"), React.createElement(Table.HeaderCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, \"Validity\"))), React.createElement(Table.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, this.renderJobs()));\n      } else return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('test', this.state.loading);\n      var cardStyle = {\n        width: '15%',\n        margin: '100px auto'\n      };\n      var labelStyle = {\n        margin: '10px',\n        textAlign: 'center'\n      };\n      var formstyle = {\n        opacity: '100%'\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), React.createElement(Head, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.11/semantic.min.css\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), React.createElement(\"style\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"\\n        h1,\\n        a {\\n          font-family: 'Helvetica';\\n        }\\n        \\n        Card {\\n           box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\\n           background-color: #D9499A;\\n           }\\n           \\n        body {\\n         background: url(\\\"https://images.unsplash.com/photo-1511649475669-e288648b2339?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2089&q=80\\\");\\n         background-repeat: no-repeat;\\n         background-position: center; \\n         background-attachment: fixed;\\n        }\\n      \")), this.state.info === null ? null : React.createElement(Card, {\n        color: \"blue\",\n        style: cardStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          margin: '2%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          margin: '1%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Name:\"), \" \", React.createElement(\"h5\", {\n        style: {\n          margin: '1%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \" \", this.state.info[0].toString())), React.createElement(\"div\", {\n        style: {\n          margin: '2%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          margin: '1%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Date of birth:\"), \" \", React.createElement(\"h5\", {\n        style: {\n          margin: '1%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, _parseInt(this.state.info[1]), \"/\", _parseInt(this.state.info[2]), \"/\", _parseInt(this.state.info[3]), \" \")), React.createElement(\"div\", {\n        style: {\n          margin: '2%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          margin: '1%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Location:\"), \" \", React.createElement(\"h5\", {\n        style: {\n          margin: '1%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \" \", this.state.info[4].toString())), React.createElement(\"div\", {\n        style: {\n          margin: '2%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          margin: '1%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"E-mail:\"), \" \", React.createElement(\"h5\", {\n        style: {\n          margin: '1%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \" \", this.state.info[5].toString())))), this.renderJobsTable(), this.renderCertificateTable(), React.createElement(FixedMenuLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ShowInfo;\n}(Component);\n\nexport default ShowInfo;","map":{"version":3,"sources":["/home/ed/seconddapp/pages/showinfo.js"],"names":["React","Component","Head","Button","Card","Container","Form","Message","Segment","Table","Icon","FixedMenuLayout","instance","web3","ShowInfo","props","state","loading","accounts","jobs","certificates","info","loadBlockchainData","eth","isMining","setState","getAccounts","methods","getBasicInfo","call","x","getJobCount","y","console","log","i","getJob","z","r","getCertificateCount","getCertificate","map","certificate","toString","tableStyle","width","margin","length","textalign","renderCertificates","job","renderJobs","cardStyle","labelStyle","textAlign","formstyle","opacity","renderJobsTable","renderCertificateTable"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Head from \"next/head\";\nimport {Button, Card, Container, Form, Message, Segment, Table, Icon} from \"semantic-ui-react\";\nimport FixedMenuLayout from \"../components/footer\";\nimport instance from \"../components/verifier.js\";\nimport web3 from '../components/web3.js';\n\n\nclass ShowInfo extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            accounts: [],\n            jobs: [],\n            certificates: [],\n            info: null\n        };\n    }\n\n    componentWillMount() {\n        this.loadBlockchainData()\n    }\n\n    async loadBlockchainData() {\n        this.setState({loading: await web3.eth.isMining()});\n        this.setState({accounts: await web3.eth.getAccounts()});\n        const x = await instance.methods.getBasicInfo(this.state.accounts[0]).call();\n        this.setState({\n            info: x\n        });\n        const y = await instance.methods.getJobCount(this.state.accounts[0]).call();\n        console.log('y',y);\n        for (let i = 0; i < y; i++) {\n            const z = await instance.methods.getJob(this.state.accounts[0], i).call();\n            this.setState({jobs: [...this.state.jobs, z]});\n            for (let i = 0; i < y; i++) {\n                const z = await instance.methods.getJob(this.state.accounts[0], i).call();\n                const r = await instance.methods.getJob(this.state.accounts[0], i).call();\n                this.setState({jobs: [...this.state.jobs, z]});\n                this.setState({jobs: [...this.state.jobs, r]});\n            }\n        }\n\n        const z = await instance.methods.getCertificateCount(this.state.accounts[0]).call();\n        for (let i = 0; i < z; i++) {\n            const r = await instance.methods.getCertificate(this.state.accounts[0], i).call();\n            this.setState({certificates: [...this.state.certificates, r]});\n        }\n\n    }\n\n\n    renderCertificates() {\n\n\n        const x = this.state.accounts[0];\n        let y = 'Unknown';\n        let r = this.state.certificates.map(function (certificate) {\n            if (certificate[3] === false && certificate[4] === false) {\n                y = 'Unknown'\n            } else if (certificate[3] === true) {\n                y = 'Approved'\n            } else if (certificate[4] === true) {\n                y = 'Denied'\n            }\n            return [<Table.Row positive={certificate[3]} negative={!certificate[3]}>\n                <Table.Cell key={x}>{certificate[1].toString()}</Table.Cell>\n                <Table.Cell key={x}>{certificate[0].toString()}</Table.Cell>\n                <Table.Cell key={x}>{certificate[2].toString()}</Table.Cell>\n                <Table.Cell>{y}</Table.Cell>\n            </Table.Row>];\n        });\n        return r;\n    }\n\n    renderCertificateTable() {\n\n        let tableStyle = {\n            width: '38%',\n            margin: '30px auto'\n        };\n\n\n        if (this.state.certificates && this.state.certificates.length) {\n            return (<Table celled style={tableStyle} color={'blue'} key={'blue'} inverted>\n\n                    <Table.Header>\n                        <Segment inverted color=\"blue\" style={{textalign: 'center'}}><h2>Certificates</h2></Segment>\n                        <Table.Row>\n                            <Table.HeaderCell> Institution</Table.HeaderCell>\n                            <Table.HeaderCell>Year </Table.HeaderCell>\n                            <Table.HeaderCell>Degree</Table.HeaderCell>\n                            <Table.HeaderCell>Validity</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {this.renderCertificates()}\n                    </Table.Body>\n                </Table>\n            );\n        } else return null;\n    }\n\n\n    renderJobs() {\n\n\n        const x = this.state.accounts[0];\n        let y = 'Unknown';\n        let r = this.state.jobs.map(function (job) {\n            if (job[3] === false && job[4] === false) {\n                y = 'Unknown'\n            } else if (job[3] === true) {\n                y = 'Approved'\n            } else if (job[4] === true) {\n                y = 'Denied'\n            }\n            return [<Table.Row positive={job[3]} negative={!job[3]}>\n                <Table.Cell key={x}>{job[1].toString()}</Table.Cell>\n                <Table.Cell key={x}>{job[0].toString()}</Table.Cell>\n                <Table.Cell key={x}>{job[2].toString()}</Table.Cell>\n                <Table.Cell>{y}</Table.Cell>\n            </Table.Row>];\n        });\n        return r;\n    }\n\n    renderJobsTable() {\n\n        let tableStyle = {\n            width: '38%',\n            margin: '30px auto'\n        };\n\n\n        if (this.state.jobs && this.state.jobs.length) {\n            return (<Table celled style={tableStyle} color={'blue'} key={'blue'} inverted>\n\n                    <Table.Header>\n                        <Segment inverted color=\"blue\" style={{textalign: 'center'}}><h2>Jobs</h2></Segment>\n                        <Table.Row>\n                            <Table.HeaderCell> Company</Table.HeaderCell>\n                            <Table.HeaderCell>Months Worked</Table.HeaderCell>\n                            <Table.HeaderCell>Position</Table.HeaderCell>\n                            <Table.HeaderCell>Validity</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {this.renderJobs()}\n                    </Table.Body>\n                </Table>\n            );\n        } else return null;\n    }\n\n\n    render() {\n        console.log('test',this.state.loading);\n        let cardStyle = {\n            width: '15%',\n            margin: '100px auto',\n\n\n        };\n\n        let labelStyle = {\n            margin: '10px',\n            textAlign: 'center'\n        };\n\n        let formstyle = {\n            opacity: '100%'\n\n        };\n\n        return (\n            <div>\n                <div>\n\n                </div>\n                <Head>\n                    <link\n                        rel=\"stylesheet\"\n                        href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.11/semantic.min.css\"\n                    />\n                    <style>{`\n        h1,\n        a {\n          font-family: 'Helvetica';\n        }\n        \n        Card {\n           box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\n           background-color: #D9499A;\n           }\n           \n        body {\n         background: url(\"https://images.unsplash.com/photo-1511649475669-e288648b2339?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2089&q=80\");\n         background-repeat: no-repeat;\n         background-position: center; \n         background-attachment: fixed;\n        }\n      `}</style>\n\n\n                </Head>\n\n\n                {this.state.info === null ? null :\n                    <Card color=\"blue\" style={cardStyle}>\n                        <Card.Content>\n\n                            <div style={{margin: '2%'}}><h3 style={{margin: '1%'}}>Name:</h3> <h5\n                                style={{margin: '1%'}}> {this.state.info[0].toString()}</h5></div>\n                            <div style={{margin: '2%'}}><h3 style={{margin: '1%'}}>Date of birth:</h3> <h5\n                                style={{margin: '1%'}}>{parseInt(this.state.info[1])}/{parseInt(this.state.info[2])}/{parseInt(this.state.info[3])} </h5>\n                            </div>\n                            <div style={{margin: '2%'}}><h3 style={{margin: '1%'}}>Location:</h3> <h5\n                                style={{margin: '1%'}}> {this.state.info[4].toString()}</h5></div>\n                            <div style={{margin: '2%'}}><h3 style={{margin: '1%'}}>E-mail:</h3> <h5\n                                style={{margin: '1%'}}> {this.state.info[5].toString()}</h5></div>\n                        </Card.Content>\n\n                    </Card>}\n                {this.renderJobsTable()}\n                {this.renderCertificateTable()}\n                <FixedMenuLayout/>\n            </div>\n        );\n    }\n\n\n}\n\nexport default ShowInfo"]},"metadata":{},"sourceType":"module"}