{"version":3,"file":"static/webpack/static/development/pages/AddJob.js.9d2f1149b2fcfec2f5b1.hot-update.js","sources":["webpack:///./pages/AddJob.js"],"sourcesContent":["import React, {Component} from 'react';\nimport Head from \"next/head\";\nimport {Button, Card, Form, Message} from \"semantic-ui-react\";\nimport FixedMenuLayout from \"../components/footer\";\nimport instance from \"../components/verifier.js\";\nimport web3 from '../components/web3.js';\nimport SimpleSnackbar from '../components/snackbar.js'\n\n\nclass AddJob extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            accounts: [],\n            errorMessage: '',\n            position: '',\n            companyname: '',\n            monthhired: 0,\n            monthleft: 0,\n            yearhired: 0,\n            yearleft: 0,\n            SSN: 0\n        };\n    };\n\n    //handle methods are changing the states and prevent the default behaviour\n    handleAddCompanyName = event => {\n        event.preventDefault();\n        this.setState({companyname: event.target.value});\n        this.setState({errorMessage: ''});\n    };\n\n    handleAddMonthH = event => {\n        event.preventDefault();\n        this.setState({monthhired: event.target.value});\n        this.setState({errorMessage: ''});\n    };\n\n    handleAddMonthL = event => {\n        event.preventDefault();\n        this.setState({monthleft: event.target.value});\n        this.setState({errorMessage: ''});\n    };\n\n    handleAddYearH = event => {\n        event.preventDefault();\n        this.setState({yearhired: event.target.value});\n        this.setState({errorMessage: ''});\n    };\n\n    handleAddYearL = event => {\n        event.preventDefault();\n        this.setState({yearleft: event.target.value});\n        this.setState({errorMessage: ''});\n    };\n\n    handleAddMonths = event => {\n        event.preventDefault();\n        this.setState({monthsworked: event.target.value});\n        this.setState({errorMessage: ''});\n    };\n\n    handleAddPosition = event => {\n        event.preventDefault();\n        this.setState({position: event.target.value});\n        this.setState({errorMessage: ''});\n    };\n\n    handleAddSSN = event => {\n        event.preventDefault();\n        this.setState({SSN: event.target.value});\n        this.setState({errorMessage: ''});\n    };\n\n    //once the function is called and no errors are present, it will submit a request to the contract to call the addJob function of the contract\n    onSubmit = async event => {\n        try {\n            event.preventDefault();\n            if (this.state.companyname === '' || this.state.position === '' || this.state.monthsworked === 0 || this.state.SSN === 0) {\n                this.setState({errorMessage: \"Fields can't be empty\"});\n            } else if (this.state.SSN < 100000000 || this.state.day > 999999999) {\n                this.setState({errorMessage: \"Invalid SSN\"});\n            } else if (this.state.errorMessage === '') {\n                this.setState({loading: true});\n                this.setState({accounts: await web3.eth.getAccounts()});\n                await instance.methods.addJob(this.state.monthsworked, this.state.position, this.state.companyname, this.state.SSN).send({\n                    from: this.state.accounts[0]\n                });\n            }\n        }\n\n        catch(err){\n            if (err.message.includes('User denied')) {\n                this.setState({errorMessage: \"Transaction Canceled\"});\n            }        }\n    };\n\n    render() {\n        {\n            let cardStyle = {\n                width: '23%',\n                margin: '100px auto',\n            };\n\n            let labelStyle = {\n                margin: '10px',\n                textAlign: 'center'\n            };\n\n            let formstyle = {\n                opacity: '100%'\n            };\n\n            return (\n                <div>\n                    <div>\n                    </div>\n                    <Head>\n                        <link\n                            rel=\"stylesheet\"\n                            href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.11/semantic.min.css\"\n                        />\n                        <style>{`\n        h1,\n        a {\n          font-family: 'Arial';\n        }\n        Card {\n           box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\n           }\n        body {\n         background: url(\"https://images.unsplash.com/photo-1511649475669-e288648b2339?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2089&q=80\");\n         background-repeat: no-repeat;\n         background-position: center; \n         background-attachment: fixed;\n        }\n      `}</style>\n                    </Head>\n                    <Card style={cardStyle}><h4 style={{margin: '4%'}}>Add a job to your resume, once submited, the\n                        company will validate it or deny it.</h4></Card>\n                    <Card color=\"blue\" style={cardStyle}>\n                        <label style={labelStyle}><h2>Add Job </h2></label>\n                        <Form className={\"form-inline\"} onSubmit={this.onSubmit}\n                              error={!!this.state.errorMessage} style={formstyle}>\n                            <Message error header={\"Notice:\"} content={this.state.errorMessage}/>\n                            <Form.Group inline style={{width: '60%', margin: '30px auto'}}>\n                                <Form.Field required style={{width: '90%', margin: '10px'}}>\n                                    <Form.Input required fluid label=\"Position:\"\n                                                style={{width: '100%'}}\n                                                value={this.state.position}\n                                                onChange={this.handleAddPosition}\n                                                error={!!this.state.errorMessage}\n                                    />\n                                    <Form.Input required fluid label=\"Company:\"\n                                                style={{width: '96.555%'}}\n                                                value={this.state.companyname}\n                                                onChange={this.handleAddCompanyName}\n                                                error={!!this.state.errorMessage}\n                                    />\n                                    <Form.Input required fluid label=\"SSN:\"\n                                                style={{width: '80%'}}\n                                                value={parseInt(this.state.SSN)}\n                                                onChange={this.handleAddSSN}\n                                                type=\"number\"\n                                                min={100000000} max={999999999} step={1}\n                                    />\n                                    <label style={{margin:'4%'}}><h5>Period Worked:</h5></label>\n<Form.Group>\n                                    <label style={{margin:'4%'}}>Date hired:</label>\n                                    <Form.Input required fluid label=\"month:\"\n                                                style={{width: '100px'}}\n                                                value={parseInt(this.state.monthhired)}\n                                                onChange={this.handleAddMonthH}\n                                                type=\"number\"\n                                                min={1} step={1}\n                                    />\n\n                                    <Form.Input required fluid label=\"year:\"\n                                                style={{width: '100px'}}\n                                                value={parseInt(this.state.yearhired)}\n                                                onChange={this.handleAddYearH}\n                                                type=\"number\"\n                                                min={1} step={1}\n                                    />\n</Form.Group>\n                                <Form.Group>\n                                    <label style={{margin:'4%'}} >Date Left:</label>\n                                    <Form.Input required fluid label=\"month:\"\n                                                style={{width: '100px'}}\n                                                value={parseInt(this.state.monthleft)}\n                                                onChange={this.handleAddMonthL}\n                                                type=\"number\"\n                                                min={1} step={1}\n                                    />\n\n                                    <Form.Input required fluid label=\"year:\"\n                                                style={{width: '100px'}}\n                                                value={parseInt(this.state.yearleft)}\n                                                onChange={this.handleAddYearL}\n                                                type=\"number\"\n                                                min={1} step={1}\n                                    />\n                                </Form.Group>\n                                </Form.Field>\n                            </Form.Group>\n                            <Form.Field style={{textAlign: 'center', margin: '10%'}}>\n                                <Button style={{width: '30%', height: '50px'}} onClick={this.onSubmit} color={\"blue\"}\n                                        disabled={this.state.loading}>\n                                    Submit\n                                </Button>\n                            </Form.Field>\n                        </Form>\n                    </Card>\n                    {/*if an operation started the state will change to true and the snackbar will appear */}\n                    <div>{this.state.loading === true ? <SimpleSnackbar/> : null}</div>\n                    <FixedMenuLayout/>\n                </div>\n            );\n        }\n    }\n}\n\nexport default AddJob"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAkBA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAtBA;AAwBA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA5BA;AA8BA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAlCA;AAoCA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAxCA;AA0CA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA9CA;AAgDA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AApDA;AAsDA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA1DA;AA4DA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAhEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AALA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AACA;AAPA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AACA;AATA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AASA;AATA;AACA;AADA;AACA;AADA;AAAA;AAWA;AADA;AACA;AAXA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAgBA;AACA;AAAA;AAAA;AACA;AACA;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAnEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAFA;AAcA;AACA;;;AAyEA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AACA;AADA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgpNA;AACA;AAsNA;;;;A","sourceRoot":""}